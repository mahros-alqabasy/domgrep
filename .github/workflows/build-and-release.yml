name: Build and Release .deb Package

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-deb:
    name: Build Debian Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Extract version from tag
        id: get_version
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y dpkg-dev debhelper fakeroot gzip

      - name: Prepare Package Structure
        run: |
          mkdir -p pkg/DEBIAN
          mkdir -p pkg/usr/bin
          mkdir -p pkg/usr/share/man/man1
          mkdir -p pkg/usr/share/doc/domgrep

          # Copy control and postinst files
          cp debian/control pkg/DEBIAN/control
          cp debian/postinst pkg/DEBIAN/postinst
          chmod 755 pkg/DEBIAN/postinst

          # Copy scripts to /usr/bin
          cp src/*.sh pkg/usr/bin/
          chmod +x pkg/usr/bin/*.sh

          # Rename domgrep.sh to domgrep as main executable
          mv pkg/usr/bin/domgrep.sh pkg/usr/bin/domgrep

          # Copy man page and compress it
          cp man/domgrep.1 pkg/usr/share/man/man1/
          gzip -f pkg/usr/share/man/man1/domgrep.1

          # Copy README or docs
          cp README.md pkg/usr/share/doc/domgrep/README.md

      - name: Build .deb package
        run: |
          dpkg-deb --build pkg domgrep_${{ env.VERSION }}.deb

      - name: Upload Debian package artifact
        uses: actions/upload-artifact@v4
        with:
          name: domgrep-deb
          path: domgrep_${{ env.VERSION }}.deb

  release:
    name: Create GitHub Release
    needs: build-deb
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract version from tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Download Debian package artifact
        uses: actions/download-artifact@v4
        with:
          name: domgrep-deb

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: "Release ${{ env.TAG }}"
          files: domgrep_${{ env.VERSION }}.deb
          body: "New release of domgrep CLI tool: version ${{ env.VERSION }}"
          draft: false
          prerelease: false
          overwrite: true
