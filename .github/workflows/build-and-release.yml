name: Build and Release domgrep

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

env:
  PACKAGE_NAME: domgrep
  DEB_ARCH: amd64

jobs:
  build:
    name: Build .deb Package
    runs-on: ubuntu-latest

    outputs:
      deb_version: ${{ steps.version.outputs.version }}
      deb_file: ${{ steps.package.outputs.deb_file }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y dpkg-dev debhelper fakeroot gzip

      - name: Bump version (patch by default)
        run: |
          chmod +x scripts/bump_version.sh
          ./scripts/bump_version.sh patch

      - name: Read new version
        id: version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Prepare package structure
        run: |
          mkdir -p pkg/DEBIAN
          mkdir -p pkg/usr/lib/${{ env.PACKAGE_NAME }}
          mkdir -p pkg/usr/bin
          mkdir -p pkg/usr/share/man/man1
          mkdir -p pkg/usr/share/doc/${{ env.PACKAGE_NAME }}

          cp debian/control pkg/DEBIAN/control
          cp debian/postinst pkg/DEBIAN/postinst
          chmod 755 pkg/DEBIAN/postinst

          cp src/*.sh pkg/usr/lib/${{ env.PACKAGE_NAME }}/
          cp man/${{ env.PACKAGE_NAME }}.1 pkg/usr/share/man/man1/
          gzip -9 -f pkg/usr/share/man/man1/${{ env.PACKAGE_NAME }}.1

          cp README.md pkg/usr/share/doc/${{ env.PACKAGE_NAME }}/
          cp debian/changelog pkg/usr/share/doc/${{ env.PACKAGE_NAME }}/
          cp debian/copyright pkg/usr/share/doc/${{ env.PACKAGE_NAME }}/
          gzip -9 -f pkg/usr/share/doc/${{ env.PACKAGE_NAME }}/changelog

          echo '#!/bin/sh' > pkg/usr/bin/${{ env.PACKAGE_NAME }}
          echo "exec /usr/lib/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}.sh \"\$@\"" >> pkg/usr/bin/${{ env.PACKAGE_NAME }}
          chmod +x pkg/usr/bin/${{ env.PACKAGE_NAME }}

          sudo chown -R root:root pkg/

      - name: Build .deb package
        id: package
        run: |
          DEB_VERSION="${{ steps.version.outputs.version }}"
          DEB_FILE="${{ env.PACKAGE_NAME }}_${DEB_VERSION}_${{ env.DEB_ARCH }}.deb"
          dpkg-deb --build pkg "$DEB_FILE"
          echo "deb_file=$DEB_FILE" >> $GITHUB_OUTPUT

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-deb
          path: ${{ steps.package.outputs.deb_file }}

  release:
    name: Release Package
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download .deb artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-deb

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ needs.build.outputs.deb_version }}"
          release_name: "domgrep v${{ needs.build.outputs.deb_version }}"
          body: "Automated release for domgrep version v${{ needs.build.outputs.deb_version }}"
          files: "${{ needs.build.outputs.deb_file }}"
          draft: false
          prerelease: false
          overwrite: true
